{"mappings":"ACEA,IAcQ,EASA,EAvBF,EAAkB,SAAS,gBAAgB,CAAC,MAGzC,MAAM,IAAI,CAQN,EARa,SAAC,CAAzB,EAAuC,MAAA,CACrC,KAAM,EAAS,WAAW,CAAC,IAAI,GAC/B,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,EAAS,OAAO,CAAC,MAAM,CAC/B,IAAK,EAAS,OAAO,CAAC,GAAG,AAC3B,C,GAaA,CAPM,EAAe,MAAM,IAAI,CAkBxB,EAlB+B,SAAC,CAAvC,EACE,MAAO,CACL,QAAS,EACT,OAkBG,OAAO,AAlBM,EAAS,OAAO,CAAC,MAAM,CAkBvB,OAAO,CAAC,QAAS,IAjBnC,CACF,IAEa,IAAI,CAAC,SAAC,CAAA,CAAK,CAAxB,EAAgC,OAAA,EAAI,MAAM,CAAG,EAAI,MAAM,A,GAIvD,CAFM,EAAe,AASd,CATkB,CAAC,EAAE,CAAC,UAAU,EAE1B,SAAS,CAAG,GAEzB,EAAa,OAAO,CAAC,SAAC,CAAtB,EACE,EAAa,MAAM,CAAC,EAAS,OAAO,CACtC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar listOfEmployees = document.querySelectorAll(\"li\");\nfunction getEmployees(list) {\n    return Array.from(list, function(employee) {\n        return {\n            name: employee.textContent.trim(),\n            position: employee.dataset.position,\n            salary: employee.dataset.salary,\n            age: employee.dataset.age\n        };\n    });\n}\ngetEmployees(listOfEmployees);\nfunction sortList(list) {\n    var employeeData = Array.from(list, function(employee) {\n        return {\n            element: employee,\n            salary: convert(employee.dataset.salary)\n        };\n    });\n    employeeData.sort(function(ee1, ee2) {\n        return ee2.salary - ee1.salary;\n    });\n    var parentOflist = list[0].parentNode;\n    parentOflist.innerHTML = \"\";\n    employeeData.forEach(function(employee) {\n        parentOflist.append(employee.element);\n    });\n}\nsortList(listOfEmployees);\nfunction convert(value) {\n    return Number(value.replace(/[$,]/g, \"\"));\n}\n\n//# sourceMappingURL=index.d6b6bceb.js.map\n","'use strict';\n\nconst listOfEmployees = document.querySelectorAll('li');\n\nfunction getEmployees(list) {\n  return Array.from(list, (employee) => ({\n    name: employee.textContent.trim(),\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: employee.dataset.age,\n  }));\n}\n\ngetEmployees(listOfEmployees);\n\nfunction sortList(list) {\n  const employeeData = Array.from(list, (employee) => {\n    return {\n      element: employee,\n      salary: convert(employee.dataset.salary),\n    };\n  });\n\n  employeeData.sort((ee1, ee2) => ee2.salary - ee1.salary);\n\n  const parentOflist = list[0].parentNode;\n\n  parentOflist.innerHTML = '';\n\n  employeeData.forEach((employee) => {\n    parentOflist.append(employee.element);\n  });\n}\n\nsortList(listOfEmployees);\n\nfunction convert(value) {\n  return Number(value.replace(/[$,]/g, ''));\n}\n"],"names":["employeeData","parentOflist","listOfEmployees","document","querySelectorAll","Array","from","employee","name","textContent","trim","position","dataset","salary","age","element","Number","value","replace","sort","ee1","ee2","list","parentNode","innerHTML","forEach","append"],"version":3,"file":"index.d6b6bceb.js.map"}